{"ast":null,"code":"var _jsxFileName = \"/Users/pascale/Desktop/Projects/Food-ordering-app/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\"; //helper functions\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostal);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.control} ${formInputValidity.name ? \"\" : styles.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.control} ${formInputValidity.street ? \"\" : styles.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.control} ${formInputValidity.postalCode ? \"\" : styles.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.control} ${formInputValidity.city ? \"\" : styles.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"UcmIxqbsOjySxfD4IGnKu3mKtco=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/pascale/Desktop/Projects/Food-ordering-app/src/components/Cart/Checkout.js"],"names":["styles","useRef","useState","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import styles from \"./Checkout.module.css\";\nimport { useRef, useState } from \"react\";\n\n//helper functions\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveChars = (value) => value.trim().length === 5;\n\nconst Checkout = (props) => {\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostal);\n\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid,\n    });\n\n    const formIsValid =\n      enteredNameIsValid &&\n      enteredStreetIsValid &&\n      enteredCityIsValid &&\n      enteredPostalCodeIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal,\n    });\n  };\n\n  return (\n    <form className={styles.form} onSubmit={confirmHandler}>\n      <div\n        className={`${styles.control} ${\n          formInputValidity.name ? \"\" : styles.invalid\n        }`}\n      >\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputValidity.name && <p>Please enter a valid name</p>}\n      </div>\n      <div\n        className={`${styles.control} ${\n          formInputValidity.street ? \"\" : styles.invalid\n        }`}\n      >\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputValidity.street && <p>Please enter a valid street</p>}\n      </div>\n      <div\n        className={`${styles.control} ${\n          formInputValidity.postalCode ? \"\" : styles.invalid\n        }`}\n      >\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputValidity.postalCode && (\n          <p>Please enter a valid postal code (5 characters long)</p>\n        )}\n      </div>\n      <div\n        className={`${styles.control} ${\n          formInputValidity.city ? \"\" : styles.invalid\n        }`}\n      >\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputValidity.city && <p>Please enter a valid city</p>}\n      </div>\n      <div className={styles.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={styles.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/pascale/Desktop/Projects/Food-ordering-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount; //Find the index of a repeated element (if any)\n\n    const existingItemCheckIndex = state.items.findIndex(item => item.id === action.item.id); //Pull out that element\n\n    const existingItem = state.items[existingItemCheckIndex]; //Change its amount to add the new one (of new similar item)\n\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      }; //Replace that old element with the new updated element in state.items\n\n      updatedItems = [...state.items];\n      updatedItems[existingItemCheckIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    //check if the element already is in the cart\n    const existingItemCheckIndex = state.items.findIndex(item => item.id === action.id); //Pull out that element\n\n    const existingItem = state.items[existingItemCheckIndex]; //Subtract its price from the total Amount\n\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemCheckIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"CLEAR\") {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/pascale/Desktop/Projects/Food-ordering-app/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingItemCheckIndex","findIndex","id","existingItem","updatedItems","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    //Find the index of a repeated element (if any)\n    const existingItemCheckIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    //Pull out that element\n    const existingItem = state.items[existingItemCheckIndex];\n    //Change its amount to add the new one (of new similar item)\n\n    let updatedItems;\n    if (existingItem) {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n      //Replace that old element with the new updated element in state.items\n      updatedItems = [...state.items];\n      updatedItems[existingItemCheckIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    //check if the element already is in the cart\n    const existingItemCheckIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    //Pull out that element\n    const existingItem = state.items[existingItemCheckIndex];\n    //Subtract its price from the total Amount\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemCheckIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"CLEAR\") {\n    return defaultCartState;\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n  const removeItemHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}